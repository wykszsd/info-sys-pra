const p=(n,t)=>{if(!n||typeof n!="string"||t<1)return!1;try{const r=n.split(",");for(const a of r){const e=a.trim();if(e.includes("-")){const[s,c]=e.split("-"),o=parseInt(s,10),i=parseInt(c,10);if(!isNaN(o)&&!isNaN(i)&&t>=o&&t<=i)return!0}else{const s=parseInt(e,10);if(!isNaN(s)&&t===s)return!0}}}catch(r){return console.error("Error parsing schedule weeks:",n,r),!1}return!1},l=n=>{if(!n)return"";try{const t=n.split(":");if(t.length>=2)return`${t[0].padStart(2,"0")}:${t[1].padStart(2,"0")}`}catch{}return n},u=(n,t)=>{const r=new Array(t).fill(!1);if(!n)return r;try{n.split(",").forEach(a=>{const e=a.trim();if(e.includes("-")){const[s,c]=e.split("-"),o=parseInt(s,10),i=parseInt(c,10);if(!isNaN(o)&&!isNaN(i))for(let f=Math.max(1,o);f<=Math.min(t,i);f++)f-1<r.length&&(r[f-1]=!0)}else{const s=parseInt(e,10);!isNaN(s)&&s>=1&&s<=t&&s-1<r.length&&(r[s-1]=!0)}})}catch(a){console.error("Error parsing weeks string for boolean array:",a)}return r},N=n=>{const t=[];let r=-1;return n.forEach((a,e)=>{const s=e+1;a?r===-1&&(r=s):r!==-1&&(t.push(r===s-1?`${r}`:`${r}-${s-1}`),r=-1)}),r!==-1&&t.push(r===n.length?`${r}`:`${r}-${n.length}`),t.join(",")};export{N as a,l as f,p as i,u as p};
